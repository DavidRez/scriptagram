.dev-mode-component-locations.component-padding--half-top-full-bottom#dev-mode-component-locations
  .dev-mode-component-locations__container
    .dev-mode-component-locations__col
      h2.dev-mode-component-locations__title Component Locations
  .dev-mode-component-locations__container
    .dev-mode-component-locations__col
      .dev-mode-component-locations__form
        select.dev-mode-component-locations__input.dev-mode-component-locations__input--select(
          @change='selectElement("page")'
          id='selectedPage'
          name='selectedPage'
          type='select'
          v-model='selectedSlugOrPath'
        )
          option(
            v-for='(page, i) in sortedPages'
            :key='`page-selection-${i}`'
            :aria-label='`Select ${page.title} page`'
            :value='page.path'
            v-html='page.parent === 0 ? page.title : page.path'
          )
        .dev-mode-component-locations__arrow
        label.dev-mode-component-locations__label(
          :class='{ "dev-mode-component-locations__label--active": selectedSlugOrPath }'
          for='selectedPage'
        ) Select a Page
      .dev-mode-component-locations__or OR
      .dev-mode-component-locations__form
        select.dev-mode-component-locations__input.dev-mode-component-locations__input--select(
          @change='selectElement("component")'
          id='selectedComponent'
          name='selectedComponent'
          type='select'
          v-model='selectedSlugOrPath'
        )
          option(
            v-for='(slug, i) in Object.keys(components)'
            :key='`component-selection-${i}`'
            :aria-label='`Select ${slug} component`'
            :value='slug'
            v-html='slug'
          )
        .dev-mode-component-locations__arrow
        label.dev-mode-component-locations__label(
          :class='{ "dev-mode-component-locations__label--active": selectedSlugOrPath }'
          for='selectedComponent'
        ) Select a Component

  .dev-mode-component-locations__container(v-if='selectedSlugOrPath')
    .dev-mode-component-locations__col.dev-mode-component-locations__col--details
      nuxt-link(
        v-if='type === "page"'
        :to='selectedSlugOrPath'
      )
        h3.dev-mode-component-locations__title.dev-mode-component-locations__title--link(v-html='`Path: ${selectedSlugOrPath}`')
      h3.dev-mode-component-locations__title(
        v-else,
        v-html='`Component: ${selectedSlugOrPath}`'
      )
      .dev-mode-component-locations__buttons
        button.dev-mode-component-locations__button(
          v-if='type === "page"'
          aria-label='toggle props'
          :class='{ "dev-mode-component-locations__button--active": expandedProps }',
          @click='toggleProps()'
        ) View Props
        button.dev-mode-component-locations__button(
          v-if='type === "page"'
          aria-label='toggle list'
          :class='{ "dev-mode-component-locations__button--active": expandedList }',
          @click='toggleList()'
          v-html='`View ${this.type === "page" ? "Components" : "Locations"}`'
        )
      .dev-mode-component-locations__details-container(
        v-if='type === "page"'
        :style='{ height: expandedProps ? propsHeight + "px" : "0px" }'
      )
        .dev-mode-component-locations__details(
          :class='{ "dev-mode-component-locations__details--active": expandedProps }'
          ref='theprops'
        )
          h4 Props
          pre {{ selectedElement }}

      .dev-mode-component-locations__details-container(:style='{ height: expandedList ? listHeight + "px" : "0px" }')
        .dev-mode-component-locations__details(
          :class='{ "dev-mode-component-locations__details--active": expandedList }'
          ref='thelist'
        )
          h4(v-html='this.type === "page" ? "Components" : "Locations"')
          .dev-mode-component-locations__list(v-if='type === "page"')
            button.dev-mode-component-locations__list-link.dev-mode-component-locations__list-link--button(
              v-for='(comp, i) in list'
              :key='`loc-comp-${i}`'
              :aria-label='`Select ${comp} component`'
              @click='selectElement("component", comp)'
              v-html='comp'
            )
          .dev-mode-component-locations__list(v-else-if='selectedSlugOrPath')
            nuxt-link.dev-mode-component-locations__list-link(
              v-for='(loc, i) in components[selectedSlugOrPath].locations'
              :key='`comp-loc-${i}`'
              :to='`${loc}#${selectedSlugOrPath}-${sortedPages.find(page => page.path === loc).page_sections.findIndex(section => section.acf_fc_layout === selectedSlugOrPath)}`'
              v-html='loc'
            )


